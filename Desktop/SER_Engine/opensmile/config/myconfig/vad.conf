[componentInstances:cComponentManager]

instance[dataMemory].type=cDataMemory


instance[waveIn].type=cWaveSource
instance[fr25].type=cFramer

instance[pe].type=cVectorPreemphasis

instance[win].type=cWindower

instance[energy].type=cEnergy

instance[turn].type=cTurnDetector

instance[turnDump].type=cWaveSinkCut





[waveIn:cWaveSource]
writer.dmLevel=wave
buffersize_sec = 5
filename=\cm[inputfile(I){test.wav}:name of input file]
start=\cm[start{0}:audio start position in seconds]
end=\cm[end{-1}:audio end position in seconds, -1 for end of file]
monoMixdown=1
outFieldName = pcm


[fr25:cFramer]
reader.dmLevel=wave
writer.dmLevel=frames
frameSize = 0.025
frameStep = 0.010
frameMode = fixed
frameCenterSpecial = center


[pe:cVectorPreemphasis]
reader.dmLevel=frames
writer.dmLevel=framespe
copyInputName = 1
processArrayFields = 1
k=0.97

[win:cWindower]
reader.dmLevel=framespe
writer.dmLevel=winframe
copyInputName = 1
processArrayFields = 1
winFunc = ham
gain = 1.0
offset = 0

[energy:cEnergy]
reader.dmLevel=winframe
writer.dmLevel=energy
rms=1
log=0


// the voice activity detection (turn detector)
[turn:cTurnDetector] 
reader.dmLevel=energy
writer.dmLevel=isTurn

writer.levelconf.noHang=1


eventRecp = turnDump



maxTurnLength = 12
maxTurnLengthGrace = 3
idx = 0
nPost = 20
nPre = 10
useRMS = 1

autoThreshold = 0
 ; instead, set the threshold manually to a default value.
 ; this derived from the RMS energy from normalised sample values (0..1)
 ; --> !!!!! you might need to adjust this value depending on your recording setup !!!!!!! <-------------------
threshold = 0.0015
 ; --> !!!!! you might need to adjust this value depending on your recording setup !!!!!!! <-------------------


[turnDump:cWaveSinkCut]
reader.dmLevel = frames

reader.errorOnFullInputIncomplete = 0
fileBase=\cm[filebase{output_segment_}:segmented wav base]

preSil = 1000

 // postSil = 3
